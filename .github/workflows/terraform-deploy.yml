name: Terraform Deploy to Azure

on:
  workflow_dispatch: # manual trigger only

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}

    steps:
    - name: Checkout repo
      uses: actions/checkout@v3

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v3

    - name: Terraform Init
      working-directory: ./terraform
      run: terraform init

    - name: Terraform Apply
      working-directory: ./terraform
      run: |
        terraform apply -auto-approve \
          -var="subscription_id=${{ secrets.ARM_SUBSCRIPTION_ID }}" \
          -var="client_id=${{ secrets.ARM_CLIENT_ID }}" \
          -var="client_secret=${{ secrets.ARM_CLIENT_SECRET }}" \
          -var="tenant_id=${{ secrets.ARM_TENANT_ID }}" \
          -var="my_ip=${{ secrets.MY_IP }}" \
          -var="rsa_public_key=${{ secrets.RSA_PUBLIC_KEY }}" \
          -var="admin_username=${{ secrets.ADMIN_USERNAME }}"

    - name: Generate Ansible Inventory
      run: |
        echo "[azure_vm]
        azure ansible_host=$(terraform output -raw vm_public_ip) \
             ansible_user=$(terraform output -raw admin_username) \
             ansible_ssh_private_key_file=~/.ssh/id_rsa" > inventory.tmp

        echo "ANSIBLE_INVENTORY=$(cat inventory.tmp)" >> $GITHUB_ENV

    - name: Trigger Ansible Workflow
      uses: peter-evans/repository-dispatch@v2
      with:
        event-type: terraform-complete
        client-playload: '{"inventory": "${{ env.ANSIBLE_INVENTORY }}"}'

    - name: Send Discord notification
      if: always()  # ensures this runs even if the plan fails
      run: |
        if [ ${{ job.status }} == 'success' ]; then
          IP_ADDRESS=$(terraform output -raw vm_public_ip)
          STATUS="✅🏗️ Terraform Deploy completed successfully at \nVM Public IP: ${IP_ADDRESS}"
        else
          STATUS="❌🏗️ Terraform Deploy failed!"
        fi

        curl -H "Content-Type: application/json" \
            -X POST \
            -d "{\"content\": \"${STATUS}\"}" \
            ${{ secrets.DISCORD_WEBHOOK_URL }}
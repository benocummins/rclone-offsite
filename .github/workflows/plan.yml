name: Terraform Plan (Dry Run)

on:
  push:
    branches: [ main ]

jobs:
  plan:
    runs-on: ubuntu-latest

    env:
      ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}

    steps:
    - name: Checkout repo
      uses: actions/checkout@v3

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v3

    - name: Terraform Init
      working-directory: ./terraform
      run: terraform init

    - name: Terraform Plan
      working-directory: ./terraform
      run: |
        terraform plan \
          -var="subscription_id=${{ secrets.ARM_SUBSCRIPTION_ID }}" \
          -var="client_id=${{ secrets.ARM_CLIENT_ID }}" \
          -var="client_secret=${{ secrets.ARM_CLIENT_SECRET }}" \
          -var="tenant_id=${{ secrets.ARM_TENANT_ID }}" \
          -var="my_ip=${{ secrets.MY_IP }}" \
          -var="rsa_public_key=${{ secrets.RSA_PUBLIC_KEY }}"

    - name: Send Discord notification
      if: always()  # ensures this runs even if the plan fails
      run: |
        STATUS="‚úÖüìÉ Terraform Plan (Dry Run) completed successfully!"
        if [ ${{ job.status }} != 'success' ]; then
          STATUS="‚ùåüìÉ Terraform Plan (Dry Run) failed!"
        fi

        curl -H "Content-Type: application/json" \
            -X POST \
            -d "{\"content\": \"${STATUS}\"}" \
            ${{ secrets.DISCORD_WEBHOOK_URL }}

